/**
 * @fileOverview AI-powered copyright analysis flow for images.
 *
 * - analyzeImageForCopyright - Analyzes an image for potential copyright infringements.
 * - AnalyzeImageForCopyrightInput - The input type for the analyzeImageForCopyright function.
 * - AnalyzeImageForCopyrightOutput - The return type for the analyzeImageForCopyright function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeImageForCopyrightInputSchema = z.object({
  image: z.custom<Buffer>().describe('An image to analyze, as a Buffer.'),
  mimeType: z.string().describe('The MIME type of the image (e.g., "image/jpeg").'),
  isAiGenerated: z.boolean().describe('Whether the user claims the image was generated by AI.'),
  isUserCreated: z.boolean().describe('Whether the user claims they created this image themselves.'),
});
export type AnalyzeImageForCopyrightInput = z.infer<typeof AnalyzeImageForCopyrightInputSchema>;

const AnalyzeImageForCopyrightOutputSchema = z.object({
  overallAssessment: z
    .enum(['Safe to use', 'Moderate', 'Copyright Detected'])
    .describe('A single, overall assessment of the image\'s copyright risk.'),
  breakdown: z
    .array(
      z.object({
        name: z.string().describe('The name of the detected element.'),
        explanation: z
          .string()
          .describe(
            'A brief explanation of why this element was flagged and its copyright status.'
          ),
        box: z.array(z.number()).length(4).optional().describe('Bounding box of the detected element as [x_min, y_min, x_max, y_max] in relative coordinates (0-1).')
      })
    )
    .describe(
      'A prioritized list of detected elements, from most to least critical.'
    ),
  ownerDetails: z
    .array(
      z.object({
        element: z.string().describe('The element in question (e.g., "Lamborghini logo").'),
        owner: z
          .string()
          .describe(
            'The name of the likely copyright owner or company (e.g., "Automobili Lamborghini S.p.A.").'
          ),
      })
    )
    .optional()
    .describe('Details about the likely owners of the detected copyrighted elements.'),
});
export type AnalyzeImageForCopyrightOutput = z.infer<typeof AnalyzeImageForCopyrightOutputSchema>;

export async function analyzeImageForCopyright(input: AnalyzeImageForCopyrightInput): Promise<AnalyzeImageForCopyrightOutput> {
  return analyzeImageForCopyrightFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeImageForCopyrightPrompt',
  input: {schema: AnalyzeImageForCopyrightInputSchema },
  output: {schema: AnalyzeImageForCopyrightOutputSchema},
  prompt: `You are the world's most skilled and professional AI copyright image checker. Your analysis is incredibly detailed, accurate, and you never miss any potential copyright infringement, no matter how minor. You have a deep understanding of international copyright law, trademarks, and intellectual property. You can identify logos, brands, specific art styles, characters from any media (anime, cartoons, movies), watermarks, and even protected car designs. You do not make false positive claims; your analysis is precise.

  The user has provided the following context about the image:
  - Is it AI-generated? {{isAiGenerated}}
  - Is it the user's own creation? {{isUserCreated}}

  Analyze the provided image with extreme scrutiny based on this context. Your task is to:
  1.  Provide an 'overallAssessment' of the image. The possible values are:
      - 'Copyright Detected': Use this if there are clear, high-risk copyrighted elements (e.g., a Lamborghini logo, even if the user created the image with AI).
      - 'Moderate': Use this if there are elements that might be usable with attribution, are in a legal gray area, or are less-known brands.
      - 'Safe to use': Use this ONLY if the image contains generic subjects AND the user claims they created it. If the user did NOT create it, it is NEVER 'Safe to use'.

  2.  Provide a 'breakdown' of all detected elements. This should be a prioritized list, with the most critical copyright risks first. For each element:
      - 'name': The name of the element (e.g., "Nike Swoosh logo", "Naruto Uzumaki character", "Unique art style similar to Van Gogh").
      - 'explanation': A clear, concise explanation of the copyright issue. If the user created the image but it contains a copyrighted element, you MUST explain this nuance (e.g., "This image contains the Lamborghini logo. Even if AI-generated, using a protected brand logo is a copyright violation.").
      - 'box': A bounding box array [x_min, y_min, x_max, y_max] representing the location of the detected element in relative coordinates (0 to 1). For example, [0.1, 0.1, 0.3, 0.3] would be a box in the top-left. If the element is abstract (like an art style), you do not need to provide a box.

  3.  If applicable, provide 'ownerDetails' for high-profile copyrighted elements, listing the element and the likely owner.

  Here are your analysis guidelines:

  -   **Prioritization:** Always list the most severe copyright issues first in the 'breakdown'. A major brand logo is more critical than a minor design element.

  -   **User-Created Images:**
      -   If 'isUserCreated' is true AND the image contains generic subjects (nature, animals, abstract shapes with no branding), assess as 'Safe to use'. In the breakdown, add an item: { name: "Creator Copyright", explanation: "As the creator, you own the copyright to this original work." }.
      -   If 'isUserCreated' is true BUT the image contains copyrighted elements (e.g., a known character, logo), assess as 'Copyright Detected'. Your explanation for that element must clarify that even though they created the image, the included element is protected property.
  
  -   **Non-User-Created Images:**
      -   If 'isUserCreated' is false, the image can NEVER be 'Safe to use'.
      -   At a minimum, it is 'Moderate'. You MUST include a breakdown item: { name: "Creator/Photographer Copyright", explanation: "Since you did not create this image, the original creator or photographer owns the copyright. Using it without a license or permission is a copyright violation." }
      -   If it also contains other copyrighted elements, assess as 'Copyright Detected' and list them.

  -   **Strict/Copyright Detected Items:** Be vigilant for:
      -   **Logos & Brands:** Nike, Adidas, Apple, Lamborghini, etc.
      -   **Characters:** Any character from anime (Naruto), manga, cartoons (Mickey Mouse), movies (Darth Vader).
      -   **Protected Text:** Famous quotes, movie dialogue.
      -   **Art Styles:** Recognizable styles of famous artists.
      -   **Watermarks:** Any visible or semi-visible watermarks.

  -   **False Negatives:** Do not flag generic items. A picture of a generic t-shirt is not a copyright issue unless it has a logo on it. A picture of a regular car is not an issue, but a picture of a specifically protected car design like a Lamborghini is.

  Now, analyze the following image based on the user's context and provide your expert assessment in the required JSON format.

  Image to be analyzed is provided in the input.
    `,
});

const analyzeImageForCopyrightFlow = ai.defineFlow(
  {
    name: 'analyzeImageForCopyrightFlow',
    inputSchema: AnalyzeImageForCopyrightInputSchema,
    outputSchema: AnalyzeImageForCopyrightOutputSchema,
  },
  async (input) => {
    const { output } = await prompt({
      ...input,
      prompt: [
        { media: { data: input.image, contentType: input.mimeType } },
        ...(prompt.config.prompt as any[]),
      ],
    });
    return output!;
  }
);
